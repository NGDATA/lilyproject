<?xml version="1.0"?>
<!--
/*
 * Copyright 2010 Outerthought bvba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:kauri="http://kauriproject.org/runtime/1.0#springext"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                             http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                             http://www.springframework.org/schema/context
                             http://www.springframework.org/schema/context/spring-context-2.5.xsd
                             http://kauriproject.org/runtime/1.0#springext
                             http://www.kauriproject.org/schemas/runtime/springext.xsd">

  <context:annotation-config/>

  <kauri:module restletContext="restletContext" classLoader="moduleClassLoader" handle="module" conf="confRegistry"/>

  <bean class="org.kauriproject.runtime.rapi.ConfPlaceholderConfigurer">
    <constructor-arg ref="confRegistry"/>
  </bean>

  <kauri:import-service
      id="representationBuilder"
      service="org.kauriproject.representation.build.RepresentationBuilder"/>

  <bean factory-bean="representationBuilder" factory-method="install">
    <constructor-arg ref="module"/>
  </bean>

  <kauri:import-service
      id="routingService"
      service="org.kauriproject.routing.RoutingService"/>

  <kauri:import-service
      id="repository"
      service="org.lilyproject.repository.api.Repository"/>

  <kauri:import-service
      id="indexer"
      service="org.lilyproject.indexer.Indexer"/>

  <kauri:export-restservice name="repository" ref="repositoryRouter"/>
  <kauri:export-restservice name="index" ref="indexRouter"/>

  <bean id="repositoryRouter" factory-bean="routingService" factory-method="createRouter">
    <constructor-arg ref="restletContext"/>
    <constructor-arg ref="module"/>
    <constructor-arg>
      <bean class="org.kauriproject.routing.RoutingConfig">
        <property name="configPath" value="repository-router.groovy"/>
        <property name="fallBackToDefault" value="false"/>
      </bean>
    </constructor-arg>
  </bean>

  <bean id="indexRouter" factory-bean="routingService" factory-method="createRouter">
    <constructor-arg ref="restletContext"/>
    <constructor-arg ref="module"/>
    <constructor-arg>
      <bean class="org.kauriproject.routing.RoutingConfig">
        <property name="configPath" value="index-router.groovy"/>
        <property name="fallBackToDefault" value="false"/>
      </bean>
    </constructor-arg>
  </bean>

  <kauri:import-service id="indexerModel" service="org.lilyproject.indexer.model.api.WriteableIndexerModel"/>

  <bean id="linkTransformer" class="org.lilyproject.tools.import_.json.DefaultLinkTransformer"/>

  <bean id="recordScannerMap" class="org.lilyproject.rest.RecordScannerMapBuilder"
        factory-method="createRecordScannerMap" scope="singleton">
    <constructor-arg>
      <!--<kauri:conf path="rest:scannerLeasePeriod"/>-->
      <value>${rest:scannerLeasePeriod}</value>
    </constructor-arg>
  </bean>

</beans>

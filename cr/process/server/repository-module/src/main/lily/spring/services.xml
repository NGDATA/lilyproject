<?xml version="1.0"?>
<!--
/*
 * Copyright 2010 Outerthought bvba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lily="http://lilyproject.org/runtime/1.0#springext"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                             http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                             http://www.springframework.org/schema/context
                             http://www.springframework.org/schema/context/spring-context-2.5.xsd
                             http://lilyproject.org/runtime/1.0#springext
                             http://www.lilyproject.org/schemas/runtime/springext.xsd">

  <context:annotation-config/>

  <lily:module classLoader="moduleClassLoader" handle="module" conf="confRegistry"/>

  <bean class="org.lilyproject.runtime.rapi.ConfPlaceholderConfigurer">
    <constructor-arg ref="confRegistry"/>
  </bean>

  <lily:import-service
      id="prematureRepositoryManager"
      service="org.lilyproject.util.repo.PrematureRepositoryManager"/>

  <lily:import-service
      id="hadoopConfFactory"
      service="org.lilyproject.server.modules.general.HadoopConfigurationFactory"/>

  <lily:import-service
      id="zooKeeper"
      service="org.lilyproject.util.zookeeper.ZooKeeperItf"/>

  <lily:import-service
      id="hbaseTableFactory"
      service="org.lilyproject.util.hbase.HBaseTableFactory"/>

  <lily:import-service
      id="networkItfInfo"
      service="org.lilyproject.server.modules.general.NetworkInterfaceInfo"/>

  <lily:import-service
      id="pluginRegistry"
      service="org.lilyproject.plugin.PluginRegistry"/>

  <lily:export-service
      ref="repositoryManager"
      service="org.lilyproject.repository.api.RepositoryManager"/>

  <lily:export-service
      ref="typeManager"
      service="org.lilyproject.repository.api.TypeManager"/>

  <lily:export-service
      ref="idGenerator"
      service="org.lilyproject.repository.api.IdGenerator"/>

  <lily:export-service
      ref="repositoryTableManager"
      service="org.lilyproject.repository.api.RepositoryTableManager"/>

  <bean id="hbaseConf"
        factory-bean="hadoopConfFactory"
        factory-method="getHBaseConf"/>

  <bean id="idGenerator" class="org.lilyproject.repository.impl.id.IdGeneratorImpl"/>

  <bean id="typeManager" class="org.lilyproject.repository.impl.HBaseTypeManager">
    <constructor-arg ref="idGenerator"/>
    <constructor-arg ref="hbaseConf"/>
    <constructor-arg ref="zooKeeper"/>
    <constructor-arg ref="hbaseTableFactory"/>
  </bean>

  <bean id="repositoryTableManager" class="org.lilyproject.repository.impl.RepositoryTableManagerImpl">
    <constructor-arg ref="hbaseConf"/>
    <constructor-arg ref="hbaseTableFactory"/>
  </bean>

  <bean id="recordFactory" class="org.lilyproject.repository.impl.RecordFactoryImpl">
    <constructor-arg ref="typeManager"/>
    <constructor-arg ref="idGenerator"/>
  </bean>

  <bean id="blobManager" factory-bean="blobManagerSetup" factory-method="getBlobManager"/>

  <bean id="blobManagerSetup" class="org.lilyproject.server.modules.repository.BlobManagerSetup">
    <constructor-arg>
      <bean class="java.net.URI">
        <constructor-arg value="${repository:blobFileSystem}"/>
      </bean>
    </constructor-arg>
    <constructor-arg ref="hbaseConf"/>
    <constructor-arg ref="hbaseTableFactory"/>
    <constructor-arg ref="zooKeeper"/>
    <constructor-arg>
      <lily:conf path="blobmanager"/>
    </constructor-arg>
  </bean>

  <bean id="blobIncubatorMonitorSetup" class="org.lilyproject.server.modules.repository.BlobIncubatorMonitorSetup">
    <constructor-arg ref="zooKeeper"/>
    <constructor-arg ref="hbaseTableFactory"/>
    <constructor-arg ref="repositoryTableManager"/>
    <constructor-arg ref="blobManager"/>
    <constructor-arg ref="typeManager"/>
    <constructor-arg>
      <lily:conf path="blobmanager"/>
    </constructor-arg>
    <constructor-arg>
      <bean factory-bean="networkItfInfo" factory-method="getHostName"/>
    </constructor-arg>
  </bean>

  <bean id="rawRepositoryManager"
        class="org.lilyproject.repository.impl.HBaseRepositoryManager">
    <constructor-arg ref="typeManager"/>
    <constructor-arg ref="idGenerator"/>
    <constructor-arg ref="recordFactory"/>
    <constructor-arg ref="hbaseTableFactory"/>
    <constructor-arg ref="blobManager"/>
  </bean>

  <bean id="recordUpdateHookActivator" class="org.lilyproject.server.modules.repository.RecordUpdateHookActivator">
    <constructor-arg ref="pluginRegistry"/>
    <constructor-arg>
      <lily:conf path="repository"/>
    </constructor-arg>
  </bean>

  <bean id="repositoryDecoratorActivator"
        class="org.lilyproject.server.modules.repository.RepositoryDecoratorActivator">
    <constructor-arg ref="pluginRegistry"/>
    <constructor-arg>
      <lily:conf path="repository"/>
    </constructor-arg>
  </bean>


  <bean id="repositoryManager"
        class="org.lilyproject.server.modules.repository.DecoratingRepositoryManager">
    <constructor-arg ref="rawRepositoryManager"/>
    <constructor-arg ref="recordUpdateHookActivator"/>
    <constructor-arg ref="repositoryDecoratorActivator"/>
  </bean>

  <bean id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter">
    <property name="beans">
      <map>
        <entry key="Lily:name=TypeManager">
          <bean factory-bean="typeManager" factory-method="getMBean"/>
        </entry>
      </map>
    </property>
    <property name="server">
      <bean class="java.lang.management.ManagementFactory" factory-method="getPlatformMBeanServer"/>
    </property>
  </bean>

  <bean class="org.lilyproject.server.modules.repository.PrematureRepositoryManagerActivator">
    <constructor-arg ref="prematureRepositoryManager"/>
    <constructor-arg ref="rawRepositoryManager"/>
  </bean>

</beans>

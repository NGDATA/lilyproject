<?xml version="1.0"?>
<!--
/*
 * Copyright 2010 Outerthought bvba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.lilyproject</groupId>
  <artifactId>lily-avro-api</artifactId>
  <name>Lily: Avro API</name>
  <description>Implementation of the Avro API for remote communication with Lily</description>

  <parent>
    <groupId>org.lilyproject</groupId>
    <artifactId>lily</artifactId>
    <version>2.2-SNAPSHOT</version>
    <relativePath>../../</relativePath>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro-ipc</artifactId>
    </dependency>

    <!-- TODO: it would be better if the repository api and impl split was revisited such that the api contains
         everything which "goes over the wire", and the impl everything which is required only server side. In that
         case, we would only need an api dependency here -->
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-repository-impl</artifactId>
    </dependency>

    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-indexer-api</artifactId>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
              <goal>protocol</goal>
            </goals>
            <configuration>
              <stringType>String</stringType>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.kauriproject</groupId>
        <artifactId>kauri-genclassloader-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/KAURI-INF/conf</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/../conf/avro</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>

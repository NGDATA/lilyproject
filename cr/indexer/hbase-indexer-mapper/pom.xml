<?xml version="1.0"?>
<!--
/*
 * Copyright 2010 Outerthought bvba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.lilyproject</groupId>
  <artifactId>lily-hbase-indexer-mapper</artifactId>
  <name>Lily: HBase Indexer Mapper</name>

  <parent>
    <groupId>org.lilyproject</groupId>
    <artifactId>lily-indexer</artifactId>
    <version>2.6-hbaseindexer-SNAPSHOT</version>
    <relativePath>../</relativePath>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-repository-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-repository-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-indexer-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-sep</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-indexer-model</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-hbaseindex-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-indexer-derefmap-indexfilter</artifactId>
    </dependency>

    <dependency>
      <groupId>com.ngdata</groupId>
      <artifactId>hbase-indexer-engine</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
      <version>${version.solr}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-core</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-fake-repository</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-import</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>groovy-maven-plugin</artifactId>
        <version>2.0</version>
        <executions>
          <execution>
            <id>generate classpath tool</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source><![CDATA[
import org.sonatype.aether.util.layout.MavenDefaultLayout;

def m2layout = new MavenDefaultLayout();

def libDir = "\${LILY_HOME}/lib";
def separator = File.pathSeparator;

def excludeGroupIds="org.apache.solr,org.apache.hadoop,org.apache.hbase".split(",");
def excludeArtifactIds="hbase-indexer-common,hbase-indexer-model,hbase-indexer-engine,hbase-sep-api,hbase-sep-impl".split(",")

def all = []
project.runtimeArtifacts.each {
    def artifact = org.apache.maven.RepositoryUtils.toArtifact(it);
    if (it.groupId in excludeGroupIds) {
      return;
    }
    if (it.artifactId in excludeArtifactIds) {
      return;
    }
    all << new File(libDir, m2layout.getPath(artifact).getPath());
}


def file = new File(project.build.directory, "lily-hbase-indexer-classpath")
file.write("echo " + all.join(separator))
]]></source>
            </configuration>
          </execution>
          <execution>
            <id>generate dev-classpath tool</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <source><![CDATA[
import org.sonatype.aether.util.layout.MavenDefaultLayout;

def libDir = "\${LILY_HOME}/lib";
def separator = File.pathSeparator;

def excludeGroupIds="org.apache.solr,org.apache.hadoop,org.apache.hbase".split(",");
def excludeArtifactIds="hbase-indexer-common,hbase-indexer-model,hbase-indexer-engine,hbase-sep-api,hbase-sep-impl".split(",")

def all = []
project.runtimeArtifacts.each {
    if (it.groupId in excludeGroupIds) {
      return;
    }
    if (it.artifactId in excludeArtifactIds) {
      return;
    }
    all << it.getFile()
}


def file = new File(project.build.directory, "lily-hbase-indexer-classpath-dev")
file.write("echo " + all.join(separator))
]]></source>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
             <groupId>org.sonatype.aether</groupId>
             <artifactId>aether-util</artifactId>
             <version>1.13.1</version>
          </dependency>
          <dependency>
             <groupId>org.apache.maven</groupId>
             <artifactId>maven-aether-provider</artifactId>
             <version>${version.maven}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>create-hbase-indexer-mapper-DEV-classpath</id>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <outputFile>${project.build.directory}/dev-classpath.txt</outputFile>
              <outputAbsoluteArtifactFilename>true</outputAbsoluteArtifactFilename>
              <prependGroupId>true</prependGroupId>
              <excludeGroupIds>org.apache.solr,org.apache.hadoop,org.apache.hbase</excludeGroupIds>
              <excludeArtifactIds>hbase-indexer-common,hbase-indexer-model,hbase-indexer-engine,hbase-sep-api,hbase-sep-impl</excludeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <replace file="${project.build.outputDirectory}/install-hbasemapper.sh" token="@@@MAPPER@@@"
                         value="${project.build.directory}/${project.build.finalName}.jar"/>
                <chmod file="${project.build.outputDirectory}/install-hbasemapper.sh" perm="755"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>

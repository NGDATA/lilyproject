<?xml version="1.0" encoding="UTF-8" ?>

<schema name="example" version="1.2">

  <types>
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <!-- Case insensitive stop word removal.
          add enablePositionIncrements=true in both the index and query
          analyzers to leave a 'gap' for more accurate phrase queries.
        -->
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
      </analyzer>
    </fieldType>
 </types>


 <fields>
   <field name="@@key" type="string" indexed="true" stored="true" required="true"/>
   <field name="@@id" type="string" indexed="true" stored="true" required="true"/>
   <field name="@@vtag" type="string" indexed="true" stored="true" required="true"/>
   <field name="@@versionless" type="string" indexed="true" stored="true" required="false"/>

   <field name="nv_field1" type="text" indexed="true" stored="true" required="false"/>
   <field name="nv_deref1" type="text" indexed="true" stored="true" required="false"/>
   <field name="nv_deref2" type="text" indexed="true" stored="true" required="false"/>
   <field name="nv_deref3" type="text" indexed="true" stored="true" required="false"/>
   <field name="nv_deref4" type="text" indexed="true" stored="true" required="false"/>

   <field name="v_field1" type="text" indexed="true" stored="true" required="false"/>
   <field name="v_deref1" type="text" indexed="true" stored="true" required="false"/>
   <field name="v_deref2" type="text" indexed="true" stored="true" required="false"/>
   <field name="v_deref3" type="text" indexed="true" stored="true" required="false"/>
   <field name="v_deref4" type="text" indexed="true" stored="true" required="false"/>

   <field name="nv_v_deref" type="text" indexed="true" stored="true" required="false"/>
   <field name="nv_v_nv_deref" type="text" indexed="true" stored="true" required="false"/>
 </fields>

 <!-- Field to use to determine and enforce document uniqueness.
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>@@key</uniqueKey>

 <!-- field for the QueryParser to use when an explicit fieldname is absent -->
 <defaultSearchField>nv_field1</defaultSearchField>

 <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
 <solrQueryParser defaultOperator="OR"/>

</schema>
/*
 * Copyright 2010 Outerthought bvba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.lilycms.repository.api;

import java.util.Map;


/**
 * IdGenerator is the main and only contact point to create {@link RecordId}s
 */
public interface IdGenerator {

    /**
     * Creates a new and unique {@link RecordId}.
     */
    public RecordId newRecordId();

    /**
     * Creates a new {@link RecordId} containing a master RecordId and variant properties.
     * This {@link RecordId} is to be used for variant records.
     */
    public RecordId newRecordId(RecordId masterRecordId, Map<String, String> variantProperties);

    /**
     * Creates a new {@link RecordId} based on a string provided by the user.
     * It is the user's responsibility to make sure the provided string is unique. 
     */
    public RecordId newRecordId(String userProvidedId);

    /**
     * Creates a {@link RecordId} based on the provided byte[].
     * @param bytes well-formed byte representation of the {@link RecordId}, this should have been generated by calling {@link RecordId#toBytes()}
     */
    public RecordId fromBytes(byte[] bytes);

    /**
     * Creates a {@link RecordId} based on the provided String.
     * @param recordIdString well-formed String representation of the {@link RecordId}, this should have been generated by calling {@link RecordId#toString()}
     */
    public RecordId fromString(String recordIdString);

}
{"namespace": "org.lilycms.repository.avro",
 "protocol": "AvroRepository",

 "types": [
     {"name": "AvroQName", "type": "record",
      "fields": [
          {"name": "namespace", "type": ["string", "null"]},
          {"name": "name", "type": "string"}
      ]
     }, 
     {"name": "AvroRecord", "type": "record",
      "fields": [
          {"name": "id", "type": ["string", "null"]},
          {"name": "version", "type": ["long", "null"]},
          {"name": "recordTypeId", "type": ["string", "null"]},
          {"name": "recordTypeVersion", "type": ["long", "null"]},
          {"name": "scopeRecordTypeIds", "type": {"type": "map", "values": "string"}},
          {"name": "scopeRecordTypeVersions", "type": {"type": "map", "values": "long"}},
          {"name": "fields", "type": {"type": "map", "values": "bytes"}},
          {"name": "fieldsToDelete", "type": {"type": "array", "items": "string"}}
      ]
     },
     
     {"name": "AvroRecordExistsException", "type": "error",
      "fields": [
          {"name": "record", "type": "AvroRecord"}
      ]
     },
     
     {"name": "AvroRecordNotFoundException", "type": "error",
      "fields": [
          {"name": "record", "type": "AvroRecord"}
      ]
     },
     
     {"name": "AvroInvalidRecordException", "type": "error",
      "fields": [
          {"name": "record", "type": "AvroRecord"},
          {"name": "message", "type": ["string", "null"]}
      ]
     },
     
     {"name": "AvroRepositoryException", "type": "error",
      "fields": [
          {"name": "message", "type": "string"}
      ]
     },
     
     {"name": "AvroFieldTypeNotFoundException", "type": "error",
      "fields": [
          {"name": "id", "type": "string"},
          {"name": "version", "type": "long"}
      ]
     },
     
     {"name": "AvroRecordTypeNotFoundException", "type": "error",
      "fields": [
          {"name": "id", "type": "string"},
          {"name": "version", "type": "long"}
      ]
     },
     
     {"name": "AvroWalException", "type": "error",
      "fields": [
          {"name": "message", "type": "string"}
      ]
     }  
 ],

 "messages": {
     "create": {
         "request": [{"name": "record", "type": "AvroRecord"}],
         "response": "AvroRecord",
         "errors": ["AvroRecordExistsException", "AvroRecordNotFoundException", "AvroInvalidRecordException", "AvroRecordTypeNotFoundException", "AvroFieldTypeNotFoundException", "AvroRepositoryException", "AvroWalException"]
     },
     
     "update": {
         "request": [{"name": "record", "type": "AvroRecord"}],
         "response": "AvroRecord",
         "errors": ["AvroRecordNotFoundException", "AvroInvalidRecordException", "AvroRecordTypeNotFoundException", "AvroFieldTypeNotFoundException", "AvroRepositoryException", "AvroWalException"]
     },
     "updateMutableFields": {
         "request": [{"name": "record", "type": "AvroRecord"}],
         "response": "AvroRecord",
         "errors": ["AvroRecordNotFoundException", "AvroInvalidRecordException", "AvroRecordTypeNotFoundException", "AvroFieldTypeNotFoundException", "AvroRepositoryException", "AvroWalException"]
     },
     "read": {
         "request": [{"name": "recordId", "type": "string"},
                     {"name": "version", "type": "long"},
                     {"name": "fieldNames", "type": ["null", {"type": "array", "items": "AvroQName"}]}],
         "response": "AvroRecord",
         "errors": ["AvroRecordNotFoundException", "AvroRecordTypeNotFoundException", "AvroFieldTypeNotFoundException", "AvroRepositoryException"]
     },
     "delete": {
         "request": [{"name": "recordId", "type": "string"}],
         "response": "null"
     }
 }
}
<!--
/*
 * Copyright 2013 NGDATA nv
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.lilyproject</groupId>
  <artifactId>lily-runtime-launcher</artifactId>
  <packaging>jar</packaging>
  <version>2.3-SNAPSHOT</version>

  <parent>
    <groupId>org.lilyproject</groupId>
    <artifactId>lily-runtime-parent</artifactId>
    <version>2.3-SNAPSHOT</version>
    <relativePath>../..</relativePath>
  </parent>

  <name>Lily Runtime ::: RUNTIME LAUNCHER</name>

  <dependencies>
    <!--
        IMPORTANT: the whole idea behind the runtime launcher is that there
        would only be one jar you need on your classpath.

        So, this project should not have any dependencies.

        The dependency below is to force that the lily-runtime-cli is built
        before the launcher, since it generates the classloader XML that
        we need.
    -->
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-runtime-cli</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-classloader</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <!--
                    Copy the classloader XML file, for which we rely on the lily-runtime-cli project
                    to generate it for us.
                -->
                <property name="classLoaderXmlLocation" value="${basedir}/../lily-runtime-cli/target/classloader-for-use-by-launcher.xml" />
                <available property="classLoaderXmlAvailable" file="${classLoaderXmlLocation}" />
                <fail unless="classLoaderXmlAvailable" message="File not available: ${classLoaderXmlLocation}" />

                <property name="targetDir" value="target/classes/org/lilyproject/runtime/launcher/" />
                <mkdir dir="${targetDir}" />
                <copy file="${classLoaderXmlLocation}" tofile="${targetDir}/classloader.xml" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>make-versionless-jar</id>
            <phase>install</phase>
            <configuration>
              <tasks>
                <!--
                   Copy the artifact to a version-less name, makes it easy to refer to in the
                   lily-runtime developer-mode launch script
                -->
                <copy file="target/${project.artifactId}-${project.version}.jar" tofile="target/${project.artifactId}.jar" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>          
        </executions>
      </plugin>
    </plugins>
  </build>

</project>

<?xml version="1.0"?>
<!--
/*
 * Copyright 2010 Outerthought bvba
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.lilyproject</groupId>
  <artifactId>lily-server-testfw</artifactId>
  <name>Lily-server: test framework</name>

  <parent>
    <groupId>org.lilyproject</groupId>
    <artifactId>lily</artifactId>
    <version>1.1-SNAPSHOT</version>
    <relativePath>../..</relativePath>
  </parent>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <solr.war>${settings.localRepository}/org/apache/solr/solr-webapp/${version.solr}/solr-webapp-${version.solr}.war</solr.war>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.lilyproject</groupId>
        <artifactId>lily-genscript-plugin</artifactId>
        <configuration>
          <scripts>
            <script>
              <basename>launch-test-lily</basename>
              <mainClass>org.lilyproject.lilyservertestfw.LilyLauncher</mainClass>
            </script>
          </scripts>
          <beforeJavaHook>
            <parameter>
              <platform>unix</platform>
              <mode>dev</mode>
              <value>
WEBAPPSDIR=${basedir}/target/hadoopwebapps
mkdir -p $WEBAPPSDIR
CWD=`pwd`
cd $WEBAPPSDIR
$JAVA_HOME/bin/jar xf ${settings.localRepository}/org/apache/hadoop/hadoop-core/${version.hadoop}/hadoop-core-${version.hadoop}.jar webapps
$JAVA_HOME/bin/jar xf ${settings.localRepository}/org/apache/hbase/hbase/${version.hbase}/hbase-${version.hbase}.jar hbase-webapps
cd $CWD

# Enable JMX access on the same port as used by HBase's region server
# This is handy because some of our test tools can read out HBase metrics this way
LILY_JMX_OPTIONS="-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=10102"
LILY_JAVA_OPTIONS="$LILY_JAVA_OPTIONS $LILY_JMX_OPTIONS"
              </value>
            </parameter>
            <parameter>
              <platform>unix</platform>
              <mode>dist</mode>
              <value>
WEBAPPSDIR=$LILY_HOME/tmp/hadoopwebapps
mkdir -p $WEBAPPSDIR
CWD=`pwd`
cd $WEBAPPSDIR
$JAVA_HOME/bin/jar xf $M2_REPO/org/apache/hadoop/hadoop-core/${version.hadoop}/hadoop-core-${version.hadoop}.jar webapps
$JAVA_HOME/bin/jar xf $M2_REPO/org/apache/hbase/hbase/${version.hbase}/hbase-${version.hbase}.jar hbase-webapps
cd $CWD
              </value>
            </parameter>
            <parameter>
              <platform>windows</platform>
              <mode>dev</mode>
              <value>
set WEBAPPSDIR=${basedir}\target\hadoopwebapps
mkdir %WEBAPPSDIR%
set CWD=%CD%
cd %WEBAPPSDIR%
"%JAVA_HOME%\bin\jar" xf ${settings.localRepository}\org\apache\hadoop\hadoop-core\${version.hadoop}\hadoop-core-${version.hadoop}.jar webapps
"%JAVA_HOME%\bin\jar" xf ${settings.localRepository}\org\apache\hbase\hbase\${version.hbase}\hbase-${version.hbase}.jar hbase-webapps
chdir /d %CWD%
              </value>
            </parameter>
            <parameter>
              <platform>windows</platform>
              <mode>dist</mode>
              <value>
set WEBAPPSDIR=%LILY_HOME%\tmp\hadoopwebapps
mkdir %WEBAPPSDIR%
set CWD=%CD%
cd %WEBAPPSDIR%
"%JAVA_HOME%\bin\jar" xf %M2_REPO%\org\apache\hadoop\hadoop-core\${version.hadoop}\hadoop-core-${version.hadoop}.jar webapps
"%JAVA_HOME%\bin\jar" xf %M2_REPO%\org\apache\hbase\hbase\${version.hbase}\hbase-${version.hbase}.jar hbase-webapps
chdir /d %CWD%
              </value>
            </parameter>
          </beforeJavaHook>
          <classPathPrefix>
            <parameter>
              <platform>unix</platform>
              <mode>dev</mode>
              <value>${basedir}/target/hadoopwebapps:${basedir}/../../cr/hbase-ext/target/lily-hbase-ext-${project.version}.jar:</value>
            </parameter>
            <parameter>
              <platform>unix</platform>
              <mode>dist</mode>
              <value>$LILY_HOME/tmp/hadoopwebapps:$LILY_HOME/lib/org/lilyproject/lily-hbase-ext/${project.version}/lily-hbase-ext-${project.version}.jar:</value>
            </parameter>
            <parameter>
              <platform>windows</platform>
              <mode>dev</mode>
              <value>${basedir}/target/hadoopwebapps;${basedir}\..\..\cr\hbase-ext\target\lily-hbase-ext-${project.version}.jar;</value>
            </parameter>
            <parameter>
              <platform>windows</platform>
              <mode>dist</mode>
              <value>%LILY_HOME%/tmp/hadoopwebapps;$LILY_HOME\lib\org\lilyproject\lily-hbase-ext\${project.version}\lily-hbase-ext-${project.version}.jar;</value>
            </parameter>
          </classPathPrefix>
        </configuration>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>genscript</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  
  <dependencies>
    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-cli-fw</artifactId>
      <!-- cli-fw is only needed when running standalone, not when this project is reused
           as library. -->
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-testfw</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <classifier>tests</classifier>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.lilyproject</groupId>
      <artifactId>lily-solr-test-fw</artifactId>
      <scope>compile</scope>
    </dependency>

    <dependency><groupId>org.kauriproject</groupId><artifactId>kauri-runtime</artifactId><version>${version.kauri}</version></dependency>
    
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-client</artifactId></dependency>
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-rest-module</artifactId></dependency>
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-indexer-module</artifactId></dependency>
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-general-module</artifactId></dependency>
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-repository-module</artifactId></dependency>
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-rowlog-module</artifactId></dependency>
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-webui-module</artifactId></dependency>
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-indexer-model</artifactId></dependency>

    <dependency><groupId>org.apache.solr</groupId><artifactId>solr-solrj</artifactId><version>${version.solr}</version></dependency>
    <dependency><groupId>org.apache.solr</groupId><artifactId>solr-webapp</artifactId><version>${version.solr}</version><type>war</type></dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
      <version>${version.solr}</version>
      <exclusions>
        <!-- Woodstox is also a dependency of solr-solrj, but there it has the correct groupId
             org.codehaus.woodstox (this version is not available in the repo). -->
        <exclusion>
          <groupId>woodstox</groupId>
          <artifactId>wstx-asl</artifactId>
        </exclusion>
        <!-- We have our own choice of slf4j implementation.-->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-jdk14</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
      <version>0.9</version>
      <exclusions>
        <exclusion>
          <groupId>edu.ucar</groupId>
          <artifactId>netcdf</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency><groupId>org.slf4j</groupId><artifactId>slf4j-log4j12</artifactId><version>1.6.1</version></dependency>
    <dependency><groupId>org.slf4j</groupId><artifactId>slf4j-api</artifactId><version>1.6.1</version></dependency>
    
    <dependency><groupId>commons-logging</groupId><artifactId>commons-logging</artifactId><version>1.1.1</version></dependency>
    <dependency><groupId>commons-io</groupId><artifactId>commons-io</artifactId><version>2.0</version></dependency>
    
    <!--
      The following dependencies are here because otherwise Spring/Kauri does not find their classes.
      This is because of the excludes that were added to the lily-client pom to make it lighter, combined
      with the fact the classes can't see classes in class loaders lower in the CL hierarchy.
    -->
    <dependency><groupId>org.lilyproject</groupId><artifactId>lily-repository-impl</artifactId></dependency>
    
    
  </dependencies>
</project>

<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.lilycms</groupId>
  <artifactId>lily-hbase-module</artifactId>
  <version>0.1-dev</version>
  <packaging>jar</packaging>

  <parent>
    <groupId>org.lilycms</groupId>
    <artifactId>lily-server</artifactId>
    <version>0.1-dev</version>
    <relativePath>../</relativePath>
  </parent>

  <name>Lily: Kauri: HBase conf module</name>

  <dependencies>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>avro</artifactId>
        </exclusion>
        <exclusion>
          <!-- also used by solr, but there with a different version of commons-codec, causing
               commons-httpclient to be in Kauri's common classloader but commons-codec not -->
          <groupId>commons-httpclient</groupId>
          <artifactId>commons-httpclient</artifactId>
        </exclusion>
        <exclusion>
          <!-- also used by solr, but there with a different version of commons-codec, causing
               commons-httpclient to be in Kauri's common classloader but commons-codec not -->
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.kauriproject</groupId>
        <artifactId>kauri-genclassloader-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>

This document describes the steps to take on the Lily code when upgrading to
new CDH libraries. 

It is based on the work done to upgrade the cdh3u2 libraries to cdh3u3.

Create Lily-version of HBase libaries
=====================================
Lily applies some patches on the (cdh) HBase libraries in order to quickly
interrupt threads when an InterruptedException is thrown.

Download
--------
Download the hbase source code from the Cloudera website (tgz version) and
untar it.

Init version repo
-----------------
The easiest and most sure way to keep track of changes is to track the changes
using, for example, git.

Therefore, execute these commands in the hbase source tree:

git init
git add .
git commit -m "original sources"

Apply existing patches
----------------------
Apply same patches as in lily/patches/$previousversion.patch.txt

patch -p0 < lily/patches/$previousversion.patch.txt

verify failures (pom.xml is expected).

Change version number
---------------------
In the root pom of hbase change the version to $hbaseversion-$cdhversion-lily

Make diff
---------
We don't keep a full fork around of the source tree, we just add a patch file
to the Lily source tree.

Create a diff of the changes:

git diff --no-prefix > hbase-0.90.4-cdh3u3.patch.txt

and put it in the lily/patches folder.

Build & deploy
--------------
Build using:

mvn -Dhadoop.profile=23 -DskipTests clean install

Deploy jars using:
But first make sure you set up Maven repository access as described on the NGDATA wiki (confluence).

mvn deploy -Dhadoop.profile=23 -DskipTests -DaltDeploymentRepository=org.lilyproject.maven-deploy::default::scp://lilyproject.org/var/www/lilyproject.org/maven/maven2/deploy


Change the Lily code to use the new libraries
=============================================

Adjust the versions in the root pom
- hbase: $hbaseversion-$cdhversion-lily
- hadoop: check what is in this cdh version
- zookeeper: check what is in this cdh version

Build Lily and add any proposed exclusions to global/hbase-client/pom.xml,
or add them to the allowed artifacts in HBaseExclusionsMojo.java 

Some Hadoop and HBase classes have been patched. If the original classes have
been changed, these new classes need to be taken and the Lily-specific patched
need to be re-applied if still needed (otherwise, the fork can be removed).

These classes include:
- org.lilyproject.hadooptestfw.fork.HBaseTestingUtility.java
- org.lilyproject.hadooptestfw.fork.MiniMRCluster.java
- org.lilyproject.hadooptestfw.fork.MiniZooKeeperCluster.java
- org.lilyproject.sep.impl.fork.ForkedReplicationSource

The following diff-commands can be used to quickly check if there are any changes on the original classes:

OLD_HBASE_DIR=./hbase-0.90.4-cdh3u3
NEW_HBASE_DIR=./hbase-0.90.6-cdh3u4
OLD_HADOOP_DIR=./hadoop-0.20.2-cdh3u3
NEW_HADOOP_DIR=./hadoop-0.20.2-cdh3u4

diff -u $OLD_HBASE_DIR/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java $NEW_HBASE_DIR/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java
diff -u $OLD_HBASE_DIR/src/main/java/org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster.java $NEW_HBASE_DIR/src/main/java/org/apache/hadoop/hbase/zookeeper/MiniZooKeeperCluster.java
diff -u $OLD_HADOOP_DIR/src/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/MiniMRCluster.java $NEW_HADOOP_DIR/src/hadoop-mapreduce-project/src/test/mapred/org/apache/hadoop/mapred/MiniMRCluster.java
